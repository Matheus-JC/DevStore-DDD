<style>
    .btnCloseAlert {
        float: right;
        font-size: 1.5rem;
        font-weight: 700;
        line-height: 1;
        color: #000;
        text-shadow: 0 1px 0 #fff;
        opacity: .5;
    }

        .btnCloseAlert:hover {
            color: #000;
            text-decoration: none;
        }

        .btnCloseAlert:not(:disabled):not(.disabled):hover, .btnCloseAlert:not(:disabled):not(.disabled):focus {
            opacity: .75;
        }

    button.btnCloseAlert {
        padding: 0;
        background-color: transparent;
        border: 0;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
    }
</style>

@if (ViewData.ModelState.ErrorCount > 0)
{
    <div class="alert alert-danger">
        <button type="button" class="btnCloseAlert" data-dismiss="alert">×</button>
        <h3 id="msgReturn">Oops! Something went wrong:</h3>
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">
        <button type="button" class="btnCloseAlert" data-dismiss="alert">×</button>
        <h3 id="msgReturn">Oops! Something went wrong:</h3>
        <p>@TempData["Error"]</p>
    </div>
}

@if (TempData["Errors"] != null)
{
    <div class="alert alert-danger">
        <button type="button" class="btnCloseAlert" data-dismiss="alert">×</button>
        <h3 id="msgReturn">Oops! Something went wrong:</h3>
        @{
            var erros = TempData["Errors"] as string[];

            if (erros != null && erros.Length > 0)
            {
                foreach (var erro in erros)
                {
                    <p>@erro</p>
                }
            }
        }

    </div>
}

@if (!string.IsNullOrEmpty(ViewBag.Success))
{
    <div class="alert alert-success">
        <button type="button" class="btnCloseAlert" data-dismiss="alert">×</button>
        <h3 id="msgReturn">@ViewBag.Success</h3>
    </div>
}